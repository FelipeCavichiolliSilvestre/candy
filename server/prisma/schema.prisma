generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Employee {
  id           String       @id @default(uuid()) @db.Char(36)
  username     String       @unique @db.VarChar(20)
  role         EmployeeRole
  passwordHash String       @map("password_hash") @db.Char(65)

  @@map("employees")
}

enum EmployeeRole {
  COOK
  DELIVER

  @@map("employee_role")
}

model Product {
  id          Int    @id @default(autoincrement()) @db.UnsignedInt
  name        String @unique @db.VarChar(50)
  description String @db.TinyText
  price       Float  @db.Float
  quantity    Int    @db.UnsignedTinyInt

  priceHistory         ProductPriceHistory[]
  orders               OrderItem[]
  inventoryAdjustments ProductInventoryAdjustment[]
  itemOf               CartItem[]

  @@map("products")
}

model ProductInventoryAdjustment {
  product  Product        @relation(fields: [productId], references: [id])
  quantity Int
  type     AdjustmentType
  date     DateTime       @default(now())

  productId Int @map("product_id") @db.UnsignedInt

  @@id([productId, date])
  @@map("product_inventory_adjustments")
}

enum AdjustmentType {
  COOKED
  RECOUNTED
  EXPIRED

  @@map("adjustment_type")
}

model ProductPriceHistory {
  price   Float    @db.Float
  date    DateTime @default(now())
  product Product  @relation(fields: [productId], references: [id])

  productId Int @map("product_id") @db.UnsignedInt

  @@id([productId, date])
  @@map("products_price_history")
}

model Client {
  id           String     @id @default(uuid()) @db.Char(36)
  username     String     @unique @db.VarChar(60)
  email        String     @unique
  phoneNumber  String     @map("phone_number") @db.Char(11)
  passwordHash String     @map("password_hash") @db.Char(65)
  orders       Order[]
  cartItems    CartItem[]

  @@map("clients")
}

model CartItem {
  client   Client  @relation(fields: [clientId], references: [id])
  product  Product @relation(fields: [productId], references: [id])
  quantity Int

  productId Int    @map("product_id") @db.UnsignedInt
  clientId  String @map("client_id") @db.Char(36)

  @@id([productId, clientId])
  @@map("cart_items")
}

model Order {
  id      String      @id @default(uuid()) @db.Char(36)
  client  Client      @relation(fields: [clientId], references: [id])
  items   OrderItem[]
  date    DateTime    @default(now())
  status  OrderStatus
  address String

  clientId String @map("client_id") @db.Char(36)

  @@map("orders")
}

enum OrderStatus {
  PAYMENT_REQUIRED
  CANCELED
  EXPIRED
}

model OrderItem {
  order    Order   @relation(fields: [orderId], references: [id])
  product  Product @relation(fields: [productId], references: [id])
  quantity Int     @db.UnsignedTinyInt

  orderId   String @map("order_id") @db.Char(36)
  productId Int    @map("product_id") @db.UnsignedInt

  @@id([orderId, productId])
  @@map("order_items")
}
